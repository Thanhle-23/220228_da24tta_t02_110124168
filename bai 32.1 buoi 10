#include<stdio.h>
#include<stdlib.h>
#include <string.h>
struct NGAY_THANG
{
	int ngay, thang, nam;	
};
typedef struct NGAY_THANG NGAY;

struct SAN_PHAM
{
	char ma[10]	, ten[100];
	NGAY ngaysx;
	float dongia, hansd;
};
typedef struct SAN_PHAM SP;

void xuatNgay(NGAY *);
void xuatSP(SP*);
void xuatDSSP(SP*, int);
void timKiemSanPham(SP *, int ,  const char *);


int main()
{
	int n;
	SP * a;
	a = (SP*)malloc(sizeof(SP)*n);
	
	char path[100];
	printf("\nNhap duong dan tap tin can doc du lieu: ");
	fflush(stdin);
	gets(path);
	 

	FILE *fp = fopen(path,"rb");//Doc du lieu
	
	if(fp!=NULL)
	{
		//Doc du lieu
		int i = 0;
		while(!feof(fp))
		{
			a = (SP*)realloc(a,sizeof(SP)*(i+1));
			fread(a+i,sizeof(SP), 1, fp);
			i++;
		}
		
		//Dong tap tin
		fclose(fp);
	}
	else
	{
		printf("\nLoi mo file!");
	}
	 
	printf("\nDanh sach cac san pham vua doc:\n");
	xuatDSSP(a,n);
	
	char maSP[20];
    printf("\nNhap ma san pham can tim: ");
    scanf("%s", maSP);
    timKiemSanPham(a, n, maSP);

	free(a);
	
	return 0;
}
void timKiemSanPham(SP *list, int n, const char *maSP) {
    int found = 0;
    for (int i = 0; i < n; i++) {
        if (strcmp(list[i].ma, maSP) == 0) {
            printf("San pham duoc tim thay:\n");
            xuatSP(&list[i]);
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Khong tim thay san pham voi ma: %s\n", maSP);
    }
}

void xuatDSSP(SP* list, int n )
{
	int i;
	for(i = 0; i<n; i++)
	{
		xuatSP(list+i);
		printf("\n");
	}
}



void xuatSP(SP*sp)
{
	printf("\n%s\t%s\t%.1f\t%.1f\t",sp->ma, sp->ten, sp->dongia, sp->hansd);
	xuatNgay(&sp->ngaysx);
}




void xuatNgay(NGAY *d)
{
	printf("%d/%d/%d", d->ngay, d->thang, d->nam);
}
