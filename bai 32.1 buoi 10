#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// C?u trúc ngày tháng
typedef struct {
    int ngay;
    int thang;
    int nam;
} NGAY_THANG;

// C?u trúc s?n ph?m
typedef struct {
    char maSanPham[20];
    char tenSanPham[50];
    float donGia;
    NGAY_THANG ngaySanXuat;
    float thoiGianSuDung;
} SAN_PHAM;

// Hàm d?c danh sách s?n ph?m t? t?p
SAN_PHAM *docDanhSachSanPham(const char *tenTep, int *soLuong) {
    FILE *file = fopen(tenTep, "rb");
    if (file == NULL) {
        printf("Khong the mo tep %s de doc!\n", tenTep);
        *soLuong = 0;
        return NULL;
    }

    // Tính s? lu?ng s?n ph?m trong t?p
    fseek(file, 0, SEEK_END);
    int fileSize = ftell(file);
    fseek(file, 0, SEEK_SET);
    *soLuong = fileSize / sizeof(SAN_PHAM);

    if (*soLuong <= 0) {
        printf("Tep khong co san pham nao.\n");
        fclose(file);
        return NULL;
    }

    // C?p phát b? nh? cho danh sách s?n ph?m
    SAN_PHAM *ds = (SAN_PHAM *)malloc(*soLuong * sizeof(SAN_PHAM));
    if (ds == NULL) {
        printf("Khong du bo nho de cap phat cho danh sach san pham.\n");
        fclose(file);
        *soLuong = 0;
        return NULL;
    }

    // Ð?c danh sách s?n ph?m t? t?p
    fread(ds, sizeof(SAN_PHAM), *soLuong, file);
    fclose(file);
    return ds;
}

// Hàm hi?n th? thông tin s?n ph?m
void hienThiSanPham(const SAN_PHAM *sp) {
    printf("Ma SP: %s\nTen SP: %s\nDon Gia: %.2f\nNgay SX: %02d/%02d/%04d\nThoi Gian SD: %.2f\n",\
           sp->maSanPham, sp->tenSanPham, sp->donGia,\
           sp->ngaySanXuat.ngay, sp->ngaySanXuat.thang, sp->ngaySanXuat.nam,\
           sp->thoiGianSuDung);
}

// Hàm hi?n th? danh sách s?n ph?m t? t?p
void hienThiDanhSachSanPham(const char *tenTep) {
    int soLuong;
    SAN_PHAM *ds = docDanhSachSanPham(tenTep, &soLuong);

    if (ds == NULL || soLuong <= 0) {
        printf("Khong co san pham nao de hien thi.\n");
        return;
    }

    for (int i = 0; i < soLuong; i++) {
        printf("\nThong tin san pham thu %d:\n", i + 1);
        hienThiSanPham(&ds[i]);
    }

    free(ds); // Gi?i phóng b? nh? sau khi dùng
}

// Hàm tìm ki?m s?n ph?m theo mã
void timKiemSanPhamTheoMa(const char *tenTep, const char *maSP) {
    int soLuong;
    SAN_PHAM *ds = docDanhSachSanPham(tenTep, &soLuong);

    if (ds == NULL || soLuong <= 0) {
        printf("Khong co san pham nao de tim kiem.\n");
        return;
    }

    int timThay = 0;
    for (int i = 0; i < soLuong; i++) {
        if (strcmp(ds[i].maSanPham, maSP) == 0) {
            printf("Thong tin san pham:\n");
            hienThiSanPham(&ds[i]);
            timThay = 1;
            break;
        }
    }

    if (!timThay) {
        printf("Khong tim thay san pham voi ma %s.\n", maSP);
    }

    free(ds); // Gi?i phóng b? nh? sau khi dùng
}

int main() {
    char tenTep[100];
    printf("Nhap ten tep : ");
    scanf("%s", tenTep);


    printf("\nDanh sach san pham:\n");
    hienThiDanhSachSanPham(tenTep);

    char maSP[20];
    printf("\nNhap ma san pham can tim: ");
    scanf("%s", maSP);
    timKiemSanPhamTheoMa(tenTep, maSP);

    return 0;
}
